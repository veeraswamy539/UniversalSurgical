@using Universal.BusinessEntities;
@model Jobs
@Scripts.Render("~/bundles/jqueryval")
<style>
    body
    {
        background-color: #e5e9ec;
    }
    .page-content
    {
        position: relative !important;
        width: auto !important;
    }
    .datepicker-dropdown.datepicker-orient-left::before
    {
        left: 179px;
    }
    .datepicker-dropdown.datepicker-orient-left::after
    {
        left: 180px;
    }
</style>
<form id="frmJobUpdate">
<div id="some_grid_container1">
    <div class="col-lg-12 search-strip">
        <div class="col-lg-3 pull-right">
            <a href="@Url.Action("JobsList", "Admin")" class="md-trigger update frm-src-fld update" data-modal="modal-16">
                <i class="fa fa-arrow-left"></i> Jobs List</a>
        </div>
    </div>
</div>
<div class="content-cont col-lg-12 col-md-12 no-padding">
    <div class=" container-fluid emp-exd-frm margin-20 p-b-20">
        <div class="grid-hd col-lg-12 col-md-12 col-sm-12 grid-headding">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 ">
                <i class="fa fa-black-tie"></i> Update Job</div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12 ">
            <div class="col-lg-12 col-md-6 col-sm-6 col-xs-6 m-t-10 m-b-10">
                <i class="fa fa-info-circle m-r-5"></i>Job Details</div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.HiddenFor(model => model.Id)
                    @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control", @id = "txtJobTitle", @placeholder = "Job Title", @Title = "Job Title" })
                    @Html.ValidationMessageFor(model => model.JobTitle)
                </div>
            </div>
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(model => model.JobLocation, new { @class = "form-control", @id = "txtJobLocation", @placeholder = "Job Location", @Title = "Job Location" })
                    @Html.ValidationMessageFor(model => model.JobLocation)
                </div>
            </div>
            <div class=" col-lg-3  col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Industry, new { @class = "form-control", @id = "txtIndustry", @placeholder = "Industry", @Title = "Industry" })
                    @Html.ValidationMessageFor(model => model.Industry)
                </div>
            </div>
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Role, new { @class = "form-control", @id = "txtRole", @placeholder = "Role", @Title = "Role" })
                    @Html.ValidationMessageFor(model => model.Role)
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextAreaFor(model => model.JobDescription, new { @class = "form-control", @id = "txtJobDescription", @placeholder = "Job Description", @Title = "Job Description" })
                    @Html.ValidationMessageFor(model => model.JobDescription)
                </div>
            </div>
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextAreaFor(model => model.JobDetails, new { @class = "form-control", @id = "txtJobDetails", @placeholder = "Job Details", @Title = "Job Details" })
                    @Html.ValidationMessageFor(model => model.JobDetails)
                </div>
            </div>
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(model => model.MinExperience, new { @class = "form-control", @id = "txtMinExperience", @placeholder = "Minimum Experience", @Title = "Minimum Experience", @maxlength = "2" })
                    @Html.ValidationMessageFor(model => model.MinExperience)
                    <label id="lblerror" class="field-validation-error">
                    </label>
                </div>
            </div>
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(model => model.MaxExperience, new { @class = "form-control", @id = "txtMaxExperience", @placeholder = "Maximum Experience", @Title = "Maximum Experience", @maxlength = "2" })
                    @Html.ValidationMessageFor(model => model.MaxExperience)
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Education, new { @class = "form-control", @id = "txtEducation", @placeholder = "Education", @Title = "Education" })
                    @Html.ValidationMessageFor(model => model.Education)
                </div>
            </div>
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Specialization, new { @class = "form-control", @id = "txtSpecialization", @placeholder = "Specialization", @Title = "Specialization" })
                    @Html.ValidationMessageFor(model => model.Specialization)
                </div>
            </div>
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>{ 
                     new SelectListItem { Text = "Active", Value = "true"},
                      new SelectListItem { Text = "Deactive", Value = "false" },  
                      }, "Select Job Status", new { @class = "form-control", @id = "ddlIsActive", @placeholder = "Select Job Status", @Title = "Job Status" })
                    @Html.ValidationMessageFor(model => model.IsActive)
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12 ">
            <div class="col-lg-12 col-md-6 col-sm-6 col-xs-6  m-t-10 m-b-10 ">
                <i class="fa fa-location-arrow  m-r-5"></i>Contact Information</div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ContactName, new { @class = "form-control", @id = "txtContactName", @placeholder = "Contact Name", @Title = "Contact Name" })
                    @Html.ValidationMessageFor(model => model.ContactName)
                </div>
            </div>
            <div class="col-lg-3 col-md-4  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ContactEmail, new { @class = "form-control", @id = "txtContactEmail", @placeholder = "Contact Email", @Title = "Contact Email" })
                    @Html.ValidationMessageFor(model => model.ContactEmail)
                </div>
            </div>
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ContactPhoneNumber, new { @class = "form-control", @id = "txtContactPhoneNumber", @placeholder = "Contact Phone Number", @Title = "Contact Phone Number" })
                    @Html.ValidationMessageFor(model => model.ContactPhoneNumber)
                </div>
            </div>
            <div class="clearfix">
            </div>
        </div>
        <div class="clearfix">
        </div>
    </div>
    <div class="col-lg-4 col-md-6 pull-right text-right m-b-20">
        <div class="dfl-buttom col-lg-6 col-md-4 col-sm-12 col-xs-12">
            <input type="submit" value="Update Job" name="btnPostJob" id="btnPostJob" /></div>
        <div class="dfl-buttom  col-lg-6 col-md-4 col-sm-12 col-xs-12">
            <input type="reset" value="Cancel" name="Cancel" id="btnCancel" />
        </div>
    </div>
</div>
<div class="popuppositionsucess">
    <div class="alert alert-success" id="JobPostingSucess" runat="server">
        <strong>Success !</strong><br />
        <label id="JobPostingSucessspan">
        </label>
    </div>
</div>
<div class="popupposition">
    <div class="alert alert-warning" id="JobPostingwarning" runat="server">
        <strong>Warning !</strong><br />
        <label id="JobPostingerrormessage">
        </label>
    </div>
</div>
<div id="JobPostingLoadimg" runat="server" style="text-align: center; padding: 50px;
    display: none; height: 100%; width: 100%; z-index: 10000; position: fixed; top: 40%;
    left: 5%;">
    <img alt="loading" src="../../Content/Images/loading.gif" height="300" width="300" /></div>
</form>
<!--[if lt IE 10]>
 <script type="text/javascript">
     $(function () {
         // Invoke the plugin
         $('input, textarea').placeholder({ customClass: 'my-placeholder' });

     });
		</script>
          <![endif]-->
<script type="text/javascript">


    function CheckMinAndMaxExp() {


        var MinValue = $('#txtMinExperience').val().replace(/^\s\s*/, '').replace(/\s\s*$/, '');
        var intRegex = /^\d+$/;
        var MaxValue = $('#txtMaxExperience').val().replace(/^\s\s*/, '').replace(/\s\s*$/, '');

        if (intRegex.test(MinValue) && intRegex.test(MaxValue))
            return (parseInt(MinValue) <= parseInt(MaxValue))
        else if (intRegex.test(MinValue) && MaxValue.length == 0)
            return true;
        else
            return false;



    }


    function MinMaxErrorMsg() {
        $('#lblerror').text("Min experience is less than Max experience");
    }

    $(document).ready(function () {

        var CheckMinMax;

        $("#txtMinExperience,#txtMaxExperience").on('change keyup paste', function () {

            CheckMinMax = CheckMinAndMaxExp();

            if (!CheckMinMax && $('#txtMinExperience').val().length > 0)
                MinMaxErrorMsg();
            else
                $('#lblerror').text("");



        });

        $('.popupposition').hide();
        $('.popuppositionsucess').hide();

        $('.update').bind('contextmenu', function (e) {
            alert("Mouse right click disabled");
            return false;
        });


        $(".update").click(function (e) {
            e.preventDefault();

            var redirecturl = $(this).attr('href');
            //        alert(redirecturl);
            $("#AdminLoadingBg").fadeIn();
            $("#AdminLoadimg").show();
            $.ajax({
                url: redirecturl,
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html'

            })
       .success(function (result) {
           $("#AdminLoadingBg").fadeOut();
           $("#AdminLoadimg").hide();
           $('#divPartial').show();
           $('#divPartial').html(result);
       })
       .error(function (xhr, status) {
       });
        });

        // button submit event

        $("#btnPostJob").click(function (e) {
            e.preventDefault();
            var valid = $("#frmJobUpdate").valid();

            CheckMinMax = CheckMinAndMaxExp();

            if (!CheckMinMax && $('#txtMinExperience').val().length > 0)
                MinMaxErrorMsg();
            else
                $('#lblerror').text("");


            if (valid && CheckMinMax) {
                $("#AdminLoadingBg").fadeIn();
                $("#AdminLoadimg").show();
                $.ajax({
                    cache: false,
                    type: 'POST',
                    url: '/Admin/UpdateJob',
                    data: $("#frmJobUpdate").serialize(),
                    dataType: 'json',
                    success: function (data) {
                        $("#AdminLoadingBg").fadeOut();
                        $("#AdminLoadimg").hide();
                        $('.popuppositionsucess').show();
                        $('.popuppositionsucess').fadeIn();
                        $('#JobPostingSucessspan').text('Job has been updated successfully');
                        $('.popuppositionsucess').show();
                        $('.popuppositionsucess').delay(3000).fadeOut('slow');
                        $('#result').text(data.Text);
                        if (data.Available === true) {
                            $('#result').text(data.Text);
                            $('#result').show();
                            $(':input', $("#frmJobPost"))
                        .not(':button, :submit, :reset, :hidden')
                        .val('')
                        .removeAttr('selected');
                            setTimeout(function () {
                                $('#modelbg').hide();
                                $('#modelbg').hide();

                                $.ajax({
                                    url: "/Admin/JobsList",
                                    contentType: 'application/html; charset=utf-8',
                                    type: 'GET',
                                    cache: false,
                                    dataType: 'html'
                                })
                     .success(function (result) {
                         $('#divPartial').html('');
                         $('#divPartial').html(result);
                     })
                      .error(function (xhr, status) {
                      });
                            }, 3000);
                        }
                        else {
                            $('#result').text(data.Text);
                            $('#result').show();
                        }
                    },
                    failure: function () {
                        $("#AdminLoadingBg").fadeOut();
                        $("#AdminLoadimg").hide();
                        alert("fail");
                    }
                });
            }
            else {
                return;
            }
        });
        $("#btnCancel").click(function (e) {
            e.preventDefault();
            var id = $("#Id").val();
            $("#AdminLoadingBg").fadeIn();
            $("#AdminLoadimg").show();
            $.ajax({
                url: "/Admin/UpdateJob/" + id,
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html'

            })
                     .success(function (result) {
                         $("#AdminLoadingBg").fadeOut();
                         $("#AdminLoadimg").hide();
                         $('#divPartial').html('');
                         $('#divPartial').html(result);

                     })
                      .error(function (xhr, status) {
                          $("#AdminLoadingBg").fadeOut();
                          $("#AdminLoadimg").hide();
                      });
        });
    });
</script>
