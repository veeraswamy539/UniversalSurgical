@using Universal.BusinessEntities;
@model Employees
@Scripts.Render("~/bundles/jqueryval")

<style>
    body
    {
        background-color: #e5e9ec;
    }
    .page-content
    {
        position: relative !important;
        width: auto !important;
    }
    .datepicker-dropdown.datepicker-orient-left::before
    {
        left: 179px;
    }
    .datepicker-dropdown.datepicker-orient-left::after
    {
        left: 180px;
    }
</style>



<form id="frmCreateEmployee">

<div id="some_grid_container1">
  
        <div class="col-lg-12 search-strip">
            <div class="col-lg-3 pull-right">
                <a href="@Url.Action("EmployeeList", "Shared")" class="md-trigger update frm-src-fld update" data-modal="modal-16">
                     <i class="fa fa-arrow-left"></i> Employees List</a>
            </div>
        </div>
  
</div>


<div class="content-cont col-lg-12 col-md-12 no-padding" id="test">
    <div class=" container-fluid emp-exd-frm margin-20 p-b-20">
        <div class="grid-hd col-lg-12 col-md-12 col-sm-12 grid-headding">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 ">
                <i class="fa fa-user-plus"></i> Create Employee</div>
          
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12 ">
            <div class="col-lg-12 col-md-6 col-sm-6 col-xs-6 m-t-10 m-b-10">
                <i class="fa fa-info-circle m-r-5"></i> Personal Details</div>
        </div>
     
        <div class="col-lg-12">
        @*employee id*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.Employee_ID, new { @class = "form-control", @id = "txtEmpId", @placeholder = "Employee ID", @Title = "Employee ID" })
                    @Html.ValidationMessageFor(Model => Model.Employee_ID)
                </div>
            </div>
            @*first name*@
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.FirstName, new { @class = "form-control", @id = "txtfname", @placeholder = "First Name", @Title = "First Name" })
                    @Html.ValidationMessageFor(Model => Model.FirstName)
                </div>
            </div>
            @*middle name*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.MiddleName, new { @class = "form-control", @id = "txtmname", @placeholder = "Middle Name", @Title = "Middle Name" })
                    @Html.ValidationMessageFor(Model => Model.MiddleName)
                </div>
            </div>
            @*last name  *@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.LastName, new { @class = "form-control", @id = "txtlname", @placeholder = "Last Name", @Title = "Last Name" })
                    @Html.ValidationMessageFor(Model => Model.LastName)
                </div>
            </div>
      </div>
       <div class="clearfix"></div>
           <div class="col-lg-12">
            @*fathers name*@
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.FathersName, new { @class = "form-control", @id = "txtFathersName", @placeholder = "Father's Name", @Title = "Father's Name" })
                    @Html.ValidationMessageFor(Model => Model.FathersName)
                </div>
            </div>
            @*mothers name*@
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.MothersName, new { @class = "form-control", @id = "txtMothersName", @placeholder = "Mother's Name", @Title = "Mother's Name" })
                    @Html.ValidationMessageFor(Model => Model.MothersName)
                </div>
            </div>
            @*Date of Birth*@
            <div class=" col-lg-3  col-md-3  m-b-10 ">
                <div class="input-append success date col-md-12 col-lg-12 no-padding">
                    @Html.TextBoxFor(Model => Model.DOB, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtDOB", @placeholder = "Date Of Birth", @Title = "Date of Birth", @type = "date-local" })
                   
                    <span class="add-on"><i class="fa fa-calendar"></i></span>
                     @Html.ValidationMessageFor(Model => Model.DOB)
                </div>
                <div class="clearfix">
                </div>
            </div>


            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="input-append success date col-md-12 col-lg-12 no-padding">
                    @Html.TextBoxFor(Model => Model.DOJ, new { @class = "form-control", @id = "txtDOJ", @placeholder = "Date of Joining", @Title = "Date of Joining", @type = "date-local"})
                    @Html.ValidationMessageFor(Model => Model.DOJ)
                  

                    <span class="add-on"><i class="fa fa-calendar"></i></span>
                      <label id="lblvalidation" style="color:#ff6d93"></label>
                </div>
            </div>

        </div>
        
          <div class="clearfix"></div>
          <div class="col-lg-12">
            @*UserGroup*@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @if (ViewBag.UserGroups != null)
                    {   
                        @Html.DropDownList("FK_UserGroup", ViewBag.UserGroups as List<SelectListItem>, "Select User Group", new { @class = "form-control", @id = "ddlUsergroup", @placeholder = "User Group", @Title = "User Group" })
                        @Html.ValidationMessageFor(Model => Model.FK_UserGroup)
                    }
                </div>
            </div>
            @*zones*@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @if (ViewBag.Zones != null)
                    {   
                        @Html.DropDownList("FK_LocationorZone", ViewBag.Zones as List<SelectListItem>, "Select Zone", new { @class = "form-control", @id = "ddlZone", @placeholder = "Zone", @Title = "Zone" })
                        @Html.ValidationMessageFor(Model => Model.FK_LocationorZone)
                    }
                </div>
            </div>
            @*manager name*@
            <div class="col-lg-3  col-md-3  m-b-10" id="mgrdiv">
                <div class="controls">
                @if (ViewBag.ManagersList != null)
                {
                    @Html.DropDownListFor(model => model.ManagerId, ViewBag.ManagersList as List<SelectListItem>, "Select Manager", new { @class = "form-control", @placeholder = "Manager", @Title = "Manager" })
                    @Html.ValidationMessageFor(Model => Model.ManagerId)
                }
                </div>
            </div>
            @*account manager*@
            <div class="col-lg-3 col-md-3  m-b-10 " id="accountmgrdiv">
                <div class="controls">
                    @if (ViewBag.AccountManagersList != null)
                    {
                      
                        @Html.DropDownList("AccountManagerId", ViewBag.AccountManagersList as List<SelectListItem>, "Select Account Manager", new { @class = "form-control", @id = "ddlAccountMgr", @placeholder = "Account Manager", @Title = "Account Manager" })
                        @Html.ValidationMessageFor(Model => Model.AccountManagerId)
                      
                    }
                </div>
            </div>
       </div>
       <div class="clearfix"></div>
        <div class="col-lg-12">
            @*PAN No*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.PANNo, new { @class = "form-control", @id = "txtPANNo", Maxlength = "10", @placeholder = "PAN No", @Title = "PAN No" })
                    @Html.ValidationMessageFor(Model => Model.PANNo)
                </div>
            </div>
            @*Aadhar No*@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.AadharNo, new { @class = "form-control  numericOnly", Maxlength = "12", @id = "txtAadharNo", @placeholder = "Aadhar No", @Title = "Aadhar No" })
                    @Html.ValidationMessageFor(Model => Model.AadharNo)
                </div>
            </div>
            @*Driving Licence No*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.DrivingLicenceNo, new { @class = "form-control", @id = "txtDrivingLiceneNo", Maxlength = "25", @placeholder = "Driving Licence No", @Title = "Driving Licence No" })
                    @Html.ValidationMessageFor(Model => Model.DrivingLicenceNo)
                </div>
            </div>
         <div class=" col-lg-3  col-md-3  m-b-10 ">
                <div class="input-append success date col-md-12 col-lg-12 no-padding">
                    @Html.TextBoxFor(Model => Model.DrivingLicenceExpiryDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtDOB", @placeholder = "Driving Licence Expiry Date", @Title = "Driving Licence Expiry Date", @type = "date-local" })
                   
                    <span class="add-on"><i class="fa fa-calendar"></i></span>
                     @Html.ValidationMessageFor(Model => Model.DrivingLicenceExpiryDate)
                </div>
                <div class="clearfix">
                </div>
            </div>
            @*Sap business id*@
            
            </div>
            <div class="clearfix"></div>
             <div class="col-lg-12">
            @*PF no*@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.PFNo, new { @class = "form-control", @id = "txtPFNo", @placeholder = "PF No", Maxlength = "15", @Title = "PF No" })
                    @Html.ValidationMessageFor(Model => Model.PFNo)
                </div>
            </div>
            @*UAN for PF*@
            <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.UANforPFNo, new { @class = "form-control", @id = "txtUANforPF",Maxlength = "25", @placeholder = "UAN for PF No", @Title = "UAN for PF No" })
                    @Html.ValidationMessageFor(Model => Model.UANforPFNo)
                </div>
            </div>
            @*ESI No*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.ESINo, new { @class = "form-control", @id = "txtESINo", Maxlength = "20",@placeholder = "ESI No", @Title = "ESI No" })
                    @Html.ValidationMessageFor(Model => Model.ESINo)
                </div>
            </div>
        
            @*Blood Group*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.BloodGroup, new { @class = "form-control", @id = "txtBloodGroup", @placeholder = "Blood Group", @Title = "Blood Group" })
                    @Html.ValidationMessageFor(Model => Model.BloodGroup)
                </div>
            </div>
            </div>
            <div class="clearfix"></div>
             <div class="col-lg-12">
            @*Mobile No*@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.MobileNo, new { @class = "form-control numericOnly", Maxlength = "10", @id = "txtMobileNo", @placeholder = "Mobile No", @Title = "Mobile No" })
                    @Html.ValidationMessageFor(Model => Model.MobileNo)
                </div>
            </div>
            @*Emergency contact name*@
            <div class="col-lg-3 col-md-3 m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.EmergencyContactPerson, new { @class = "form-control", @id = "txtEmergencyContactPerson", @placeholder = "Emergency Contact Person Name", @Title = "Emergency Contact Person Name" })
                    @Html.ValidationMessageFor(Model => Model.EmergencyContactPerson)
                </div>
            </div>
            @*Emergency contact number*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.EmergencyContactNo, new { @class = "form-control numericOnly", Maxlength = "10", @id = "txtEmergencyContactNo", @placeholder = "Emergency Contact No", @Title = "Emergency Contact No" })
                    @Html.ValidationMessageFor(Model => Model.EmergencyContactNo)
                </div>
            </div>
 
                     <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.PersonalEmailID, new { @class = "form-control", @id = "txtPersonalMailId", @placeholder = "Personal Mail-ID", @Title = "Personal Mail-ID" })
                    @Html.ValidationMessageFor(Model => Model.PersonalEmailID)
                </div>
            </div>
            </div>
              <div class="clearfix"></div>
            <div class="col-lg-12">
            @*Company Mail ID*@
            <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.CompanyMailID, new { @class = "form-control", @id = "txtCompanyMailId", @placeholder = "Company Mail-ID", @Title = "Company Mail-ID" })
                    @Html.ValidationMessageFor(Model => Model.CompanyMailID)
                </div>
            </div>
       
            @*Vehcile Type*@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @Html.DropDownListFor(Model => Model.VehicleType, new List<SelectListItem>

{ 
   new SelectListItem { Text = "Four-Wheeler", Value = "FourWheeler"},
   new SelectListItem { Text = "Two-Wheeler", Value = "TwoWheeler" },
  
}, "Select Vehicle Type", new { @class = "form-control", @id = "ddlvehicleType", @Title = "vehicle Type" })
                    @Html.ValidationMessageFor(Model => Model.VehicleType)
                </div>
            </div>
            @* Conveyance *@

            <div class="col-lg-3 col-md-3  m-b-10" id="divLumpsumAmountDDL">
                <div class="controls">
                    @Html.DropDownListFor(Model => Model.LumpsumAmountDDL, new List<SelectListItem>

{ 
   new SelectListItem { Text = "Want to give Lumpsum amount", Value = "lumpsum"},
   new SelectListItem { Text = "Want to give Conveyance amount", Value = "convayance" },
  
}, "Select Payment type", new { @class = "form-control", @id = "lumpsumORnot", @Title = "Lumpsum Amount or Conveyance" })
                    @Html.ValidationMessageFor(Model => Model.LumpsumAmountDDL)
                </div>
            </div>
            <div class="col-lg-3 col-md-3 m-b-10" id="divtxtConveyance">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.Conveyance, new { @class = "form-control numericOnly1", @id = "txtConveyance", Maxlength = "15", @placeholder = "Conveyance", @Title = "Conveyance" })
                    @Html.ValidationMessageFor(Model => Model.Conveyance)
                </div>
            </div>
            </div>
               <div class="clearfix"></div>
             <div class="col-lg-12">
            <div class="col-lg-3 col-md-3 m-b-10" id="divtxtLumpsumAmount">
                <div class="controls" >
                    @Html.TextBoxFor(Model => Model.LumpsumAmount, new { @class = "form-control numericOnly1", @id = "txtLumpsumAmount", Maxlength = "15", @placeholder = "Lumpsum Amount", @Title = "Lumpsum Amount" })
                    @Html.ValidationMessageFor(Model => Model.LumpsumAmount)
                </div>
            </div>
            <div class="col-lg-3 col-md-3 m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.PassportNumber, new { @class = "form-control", @id = "txtPassportNo",Maxlength = "8", @placeholder = "Passport No", @Title = "Passport No" })
                    @Html.ValidationMessageFor(Model => Model.PassportNumber)
                </div>
            </div>
            
            
                <div class="col-lg-3 col-md-3  m-b-10 ">
                <div class="input-append success date col-md-12 col-lg-12 no-padding">
                    @Html.TextBoxFor(Model => Model.PassportValidateDate, new { @class = "form-control", @id = "PassportValidateDate", @placeholder = "Passport Validate", @Title = "Passport Validate" })
                    @Html.ValidationMessageFor(Model => Model.PassportValidateDate)
                  

                    <span class="add-on"><i class="fa fa-calendar"></i></span>
                    
                </div>
            </div>

                @*gender*@
            <div class="col-lg-3 col-md-3  m-b-10">
                <div class="controls">
                    @if (ViewBag.Genders != null)
                    {
                        @Html.DropDownListFor(Model => Model.Gender, ViewBag.Genders as List<SelectListItem>, "Select Gender", new { @class = "form-control", @id = "ddlGender", @Title = "Gender" })
                        @Html.ValidationMessageFor(Model => Model.Gender)
                    }
                </div>
            </div>
            </div>
               <div class="clearfix"></div>
             <div class="col-lg-12">
             <div class="col-lg-3  col-md-3  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.SAPBussinessId, new { @class = "form-control", @id = "txtSapBusinessId", Maxlength = "20", @placeholder = "SAP Business Id", @Title = "SAP Business Id" })
                    @Html.ValidationMessageFor(Model => Model.SAPBussinessId)
                </div>
            </div>
      
            </div>
       
          <div class="clearfix"></div>
        
        @*contact Information*@
        <div class="col-lg-12 ">
            <div class="col-lg-12 col-md-6 col-sm-6 col-xs-6  m-t-10 m-b-10 ">
                <i class="fa fa-location-arrow  m-r-5"></i> Contact Information</div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
            @*Permanent Address*@
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @Html.TextAreaFor(Model => Model.PermanentAddress, new { @class = "form-control", @id = "txtPermanentAddress", @placeholder = "Permanent Address", @Title = "Permanent Address" })
                    @Html.ValidationMessageFor(Model => Model.PermanentAddress)
                </div>
            </div>
            @*Permanent State*@
            <div class="col-lg-3 col-md-4  m-b-10">
                <div class="controls">
                    @Html.DropDownList("FK_PermanentState", ViewBag.States as List<SelectListItem>, "Select Permanent State", new { @class = "form-control", @id = "ddlPermanentState", @Title = "Permanent State" })
                    @Html.ValidationMessageFor(Model => Model.FK_PermanentState)
                </div>
            </div>
            @*Permanent city*@
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @* @Html.DropDownListFor(Model => Model.FK_PermanentCity, "select city",  new { @class = "form-control", @id = "ddlPermanentCity", @Title = "" })
                        @Html.ValidationMessageFor(Model => Model.FK_PermanentCity)*@
                    @Html.DropDownListFor(Model => Model.FK_PermanentCity, new List<SelectListItem> { }, "Select Permanent District", new { @class = "form-control", @Title = "Permanent District" })
                    @* <select id="FK_PermanentCity" name="FK_PermanentCity" class="form-control">
                        <option>Select Permanent City</option>
                    </select>*@
                    @Html.ValidationMessageFor(Model => Model.FK_PermanentCity)
                </div>
            </div>
             <div class="col-lg-3 col-md-3 m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.PermanentCityname, new { @class = "form-control", @id = "txtPermanenntcityname", @placeholder = "Permanent City Name", @Title = " Permanent City Name" })
                    @Html.ValidationMessageFor(Model => Model.PermanentCityname)
                </div>
            </div>
              <div class="clearfix">
        </div>

            @*pincode*@
            <div class="col-lg-3 col-md-4  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.PermanentPincode, new { @class = "form-control numericOnly", @id = "txtPincode", @placeholder = "Pincode", @Title = "Pincode", Maxlength = "6" })
                    @Html.ValidationMessageFor(Model => Model.PermanentPincode)
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
       @*  <div class="checkbox check-info">*@
      
        @Html.CheckBoxFor(Model => Model.SameAddress, new { @id = "chksameAddress" })
      
        @*</div>*@
          <span>Current Address same as Permanent Address</span>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
            @*Temparary Address*@
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @Html.TextAreaFor(Model => Model.TempAddress, new { @class = "form-control", @id = "txtTempAddress", @placeholder = "Current Address", @Title = "Current Address" })
                    @Html.ValidationMessageFor(Model => Model.TempAddress)
                </div>
            </div>
            @*Temp States*@
            <div class="col-lg-3 col-md-4  m-b-10">
                <div class="controls">
                    @if (ViewBag.States != null)
                    {   
                        @Html.DropDownList("FK_TempState", ViewBag.States as List<SelectListItem>, "Select Current State", new { @class = "form-control", @id = "ddlTempState", @Title = "Current State" })
                        @Html.ValidationMessageFor(Model => Model.FK_TempState)
                    }
                </div>
            </div>
            @* Temp Cities *@
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    <select id="FK_TempCity" name="FK_TempCity" class="form-control", title ="Current District">
                        <option value="0">Select Current District</option>
                    </select>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.CurrentCityname, new { @class = "form-control", @id = "txtCurrentcityname", @placeholder = "Current City Name", @Title = " Current City Name" })
                    @Html.ValidationMessageFor(Model => Model.CurrentCityname)
                </div>
            </div>
            <div class="clearfix">
              </div>
            @*Temp Pincode*@
            <div class="col-lg-3  col-md-6  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.TempPincode, new { @class = "form-control numericOnly", @id = "txtTempPincode", @placeholder = "Current Pincode", @Title = "Current Pincode", Maxlength = "6" })
                    @Html.ValidationMessageFor(Model => Model.TempPincode)
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12 ">
            <div class="col-lg-12 col-md-6 col-sm-6 col-xs-6    m-t-10 m-b-10 ">
                <i class="fa fa-inr  m-r-5"></i> Bank Information</div>
        </div>
        <div class="clearfix">
        </div>
        @*Bank Information*@
        <div class="col-lg-12">
            @*Bank Name*@
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.BankName, new { @class = "form-control", @id = "txtBankName", @placeholder = "Bank Name", @Title = "Bank Name" })
                    @Html.ValidationMessageFor(Model => Model.BankName)
                </div>
            </div>
            @*Branch & Location*@
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.BranchandLocation, new { @class = "form-control", @id = "txtBranchAndLocation", @placeholder = "Branch & Location", @Title = "Branch & Location" })
                    @Html.ValidationMessageFor(Model => Model.BranchandLocation)
                </div>
            </div>
            @*Account No*@
            <div class="col-lg-3  col-md-6  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.BankAccountNo, new { @class = "form-control ", @id = "txtAccountNo numericOnly", @placeholder = "Account No",Maxlength="20", @Title = "Account No" })
                    @Html.ValidationMessageFor(Model => Model.BankAccountNo)
                </div>
            </div>
            @*Bank IFSC Code*@
            <div class="col-lg-3  col-md-6  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.BankIFSCCode, new { @class = "form-control", @id = "txtIFSCCode", @placeholder = "IFSC Code",Maxlength="15", @Title = "IFSC Code" })
                    @Html.ValidationMessageFor(Model => Model.BankIFSCCode)
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12">
            <div class="col-lg-3  col-md-6  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.NoOfLeaves, new { @class = "form-control", @id = "txtNoofLeaves", Maxlength = "2",@placeholder = "No.of Leaves", @Title = "No Of Leaves" })
                    @Html.ValidationMessageFor(Model => Model.NoOfLeaves)
                </div>
            </div>
        </div>

                  <div class="col-lg-3 col-md-6  m-b-10">
                <div class="controls">
                    @Html.DropDownListFor(Model => Model.MaritalStatus, new List<SelectListItem>

{ 
   new SelectListItem { Text = "Single", Value = "Single"},
   new SelectListItem { Text = "Married", Value = "Married" },
  
}, "Select Marital Status", new { @class = "form-control", @id = "ddlMaritalStatus", @Title = "Marital Status" })
                    @Html.ValidationMessageFor(Model => Model.MaritalStatus)
                </div>
            </div>
        
            <div class="col-lg-3 col-md-6 m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.NOK, new { @class = "form-control", @id = "txtNOK", @placeholder = "NOK", @Title = "NOK" })
                    @Html.ValidationMessageFor(Model => Model.NOK)
                </div>
            </div>
        <div class="col-lg-3 col-md-6 m-b-10">
            <div class="col-lg-6 col-md-6 ">
                        <label class="myLabel">
                             @Html.TextBoxFor(Model => Model.ProfilePicturePath, new { type = "file", @Title = "Profile Picture" })
                            <span>Upload</span>
                         </label>
                 <img src="#" style="height:100px;width:100px; " alt ="img" id="imgDisplay"/>
            </div>
            <div class="controls" style="display: none">
                @Html.TextBoxFor(Model => Model.Temimagepath)

            </div>


              <div class="col-lg-6 col-md-6 m-b-10 no-padding" >
                <div class="controls dfl-buttom">
                       <input type="button" value="Delete Image" name="btnDelete" id="btnDelete" />
                     </div>
            </div>

        </div>
      
    </div>
    @*submit and reset buttons*@
    <div class="col-lg-4 col-md-6 pull-right text-right m-b-20">
    <div class="dfl-buttom col-lg-6 col-md-4 col-sm-12 col-xs-12">
     <input type="submit" value="Register" name="Register" id="btnRegister" /></div>
        
         <div class="dfl-buttom  col-lg-6 col-md-4 col-sm-12 col-xs-12">    
            <input type="reset" value="Cancel" name="Cancel" id="btnCancel" />
          </div>
    </div>
</div>


<div class="popuppositionsucess">

 <div class="alert alert-success" id="CreateProfileSucess" runat="server">
<strong>Success !</strong><br /><label id="CreateProfileSucessspan"></label>

</div>
</div>

<div class="popupposition">
 <div class="alert alert-warning" id="CreateProfilewarning" runat="server">
<strong>Warning !</strong><br /><label id="createemperrormessage"></label>

</div>

</div>


 <div id="CreateEmployeeLoadimg" runat="server" style="text-align: center; padding: 50px; display:none; height:100%; width:100%; z-index:10000; position:fixed; top:40%; left:5%;"> <img alt="loading" src="../../Content/Images/loading.gif" height="300" width="300" /></div>


@*</div>*@
</form>
  <!--[if lt IE 10]>
 <script type="text/javascript">
     $(function () {
         // Invoke the plugin
         $('input, textarea').placeholder({ customClass: 'my-placeholder' });

     });
		</script>
          <![endif]-->

           <script type="text/javascript">
               $('.update').bind('contextmenu', function (e) {
                   alert("Mouse right click disabled");
                   return false;
               }); 
        </script>
<script type="text/javascript">


    function uploadfileForIE() {

      
        var iframe = $('<iframe name="postiframe" id="postiframe" style="display: none"></iframe>');

        $("body").append(iframe);

        var form = $('#frmCreateEmployee');
        form.attr("action", "/Admin/ProfileImageUpload");
        form.attr("method", "post");

        form.attr("encoding", "multipart/form-data");
        form.attr("enctype", "multipart/form-data");

        form.attr("target", "postiframe");
        form.attr("file", $('#ProfilePicturePath').val());
        form.submit();

        return false;
    }

    $("#txtPassportNo").change(function (e) {
        e.preventDefault();
        var passport = $('#txtPassportNo').val();

        $.ajax({
            url: '/Admin/VerifyPassportNumber',
            type: "GET",
            data: { passport: passport },
            success: function (data) {
                if (data >= 1) {
                    $("#txtPassportNo").val("");
                    $(".popupposition").fadeIn();
                    $('#createemperrormessage').text('Passport Number already exist, please enter new number');
                    $('#createemperrormessage').show();
                    $('.popupposition').delay(3000).fadeOut('slow');
                    //alert(' Passport Number already exist, please enter new number');
                    $('#txtPassportNo').focus();
                }
            },
            error: function (event, jqxhr, settings, exception) {
                //                    alert(jqxhr);
            }
        });
    });

    $('.numericOnly1').on('keypress', function (event) {
        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) && event.which != 8 && event.which != 0 && event.which != 118 && event.which != 99) {
            event.preventDefault();
        }
        if (($(this).val().indexOf('.') != -1) && event.which != 8 && ($(this).val().substring($(this).val().indexOf('.'), $(this).val().indexOf('.').length).length > 2)) {
            event.preventDefault();
        }
        //            if (!e) var e = window.event;
        //            if (e.keyCode > 0 && e.which == 0) return true;
        //            if (e.keyCode) code = e.keyCode;
        //            else if (e.which) code = e.which;
        //            var character = String.fromCharCode(code);
        //            if (character == '\b' || character == ' ' || character == '\t') return true;
        //            if (keyDown && (code == vKey || code == Vkey)) return (character);
        //            else return (/[0-9.]$/.test(character));
    }).on('focusout', function (e) {
        var $this = $(this);
        $this.val($this.val().replace(/[^0-9.]/g, ''));
    }).on('paste', function (e) {
        var $this = $(this);
        setTimeout(function () {
            $this.val($this.val().replace(/[^0-9.]/g, ''));
        }, 5);
    });


    $('#chksameAddress').change(function () {
        if ($(this).is(":checked")) {

            if ($("#txtPermanentAddress").val() != "") {
                //                alert();
                $("#txtTempAddress").val('');
                $("#ddlTempState").val('');
                $("#FK_TempCity").val('');
                $("#txtCurrentcityname").val('');
                $("#txtTempPincode").val('');
               

                $("#txtTempAddress").prop('disabled', true);
                $("#ddlTempState").prop('disabled', true);
                $("#FK_TempCity").prop('disabled', true);
                $("#txtCurrentcityname").prop('disabled', true);
                $("#txtTempPincode").prop('disabled', true);
             

                $("#txtPermanentAddress").prop('disabled', false);
                $("#ddlPermanentState").prop('disabled', false);
                $("#FK_PermanentCity").prop('disabled', false);
                $("#txtPincode").prop('disabled', false);
                $("#txtPermanenntcityname").prop('disabled', false);
            }

            else {

                $("#txtPermanentAddress").prop('disabled', false);
                $("#ddlPermanentState").prop('disabled', false);
                $("#FK_PermanentCity").prop('disabled', false);
                $("#txtPincode").prop('disabled', false);
                $("#txtPermanenntcityname").prop('disabled', false);


                $("#txtTempAddress").prop('disabled', true);
                $("#ddlTempState").prop('disabled', true);
                $("#FK_TempCity").prop('disabled', true);
                $("#txtTempPincode").prop('disabled', true);
                $("#txtCurrentcityname").prop('disabled', true);
            }

        }
        else {
            //alert("not checked");
            $("#txtPermanentAddress").prop('disabled', false);
            $("#ddlPermanentState").prop('disabled', false);
            $("#FK_PermanentCity").prop('disabled', false);
            $("#txtPincode").prop('disabled', false);
            $("#txtPermanenntcityname").prop('disabled', false);

            $("#txtTempAddress").prop('disabled', false);
            $("#ddlTempState").prop('disabled', false);
            $("#FK_TempCity").prop('disabled', false);
            $("#txtTempPincode").prop('disabled', false);
            $("#txtCurrentcityname").prop('disabled', false);
        }
    });

    var validateDOBDOJdates = false;


    function ValidateDOBDOJDates() {
        var doj;
        var djyear
        var dob = $("#txtDOB").val().split("/");
     
        if ($("#txtDOJ").val() != "" && $("#txtDOJ").val() != null) {
            doj = $("#txtDOJ").val().split("/");
             djyear = new Date(doj[2], doj[1] - 1, doj[0]).getFullYear();
        }
         else {
             var d = new Date();

             var djyear = d.getFullYear();
          
        }

        var dbyear = new Date(dob[2], dob[1] - 1, dob[0]).getFullYear();


       

        var age = djyear - dbyear;

        //        alert(age >= 18)

        if (age >= 18) {

            $('#lblvalidation').text("");

            return true;

        }
        else {



            $('#lblvalidation').text("Age should be 18 years or more");

            return false;

        }

    }





    document.getElementById("divLumpsumAmountDDL").style.display = "none";

    document.getElementById("divtxtConveyance").style.display = "none";

    document.getElementById("divtxtLumpsumAmount").style.display = "none";

    $("#lumpsumORnot").change(function (e) {
        e.preventDefault();

        var lum = $('#lumpsumORnot').val();
        //   alert(lum);
        //        $('#divLumpsumAmountDDL').get(0).selectedIndex = 0;
        //        $('#lumpsumORnot').val('');
        if (lum == "convayance") {
            document.getElementById("divLumpsumAmountDDL").style.display = "inline";
            document.getElementById("divtxtLumpsumAmount").style.display = "none";
            document.getElementById("divtxtConveyance").style.display = "inline";

            $('#txtConveyance').val('');
            $('#txtLumpsumAmount').val('');
        }
        else if (lum == "lumpsum") {
            document.getElementById("divLumpsumAmountDDL").style.display = "inline";
            document.getElementById("divtxtConveyance").style.display = "none";
            document.getElementById("divtxtLumpsumAmount").style.display = "inline";
            $('#txtConveyance').val('');
            $('#txtLumpsumAmount').val('');
        }
        else if (lum == "") {
            document.getElementById("divLumpsumAmountDDL").style.display = "inline";
            document.getElementById("divtxtConveyance").style.display = "none";
            document.getElementById("divtxtLumpsumAmount").style.display = "none";
            $('#txtConveyance').val('');
            $('#txtLumpsumAmount').val('');
            //                $("txtConveyance").prop('disabled', false);
            //                $("txtLumpsumAmount").prop('disabled', false);
            $("#txtConveyance").removeAttr('disabled');
            $("#txtLumpsumAmount").removeAttr('disabled');
            $("#txtConveyance").prop('disabled', false);
            $("#txtLumpsumAmount").prop('disabled', false);
        }


    });
    $("#ddlvehicleType").change(function (e) {
        e.preventDefault();

        var vehicle = $('#ddlvehicleType').val();
        $('#divLumpsumAmountDDL').get(0).selectedIndex = 0;
        $('#lumpsumORnot').val('');
        if (vehicle == "FourWheeler") {
            document.getElementById("divLumpsumAmountDDL").style.display = "inline";
            document.getElementById("divtxtLumpsumAmount").style.display = "none";
            document.getElementById("divtxtConveyance").style.display = "none";
            $('#lumpsumORnot').val('');
            $('#txtLumpsumAmount').val('');
            $('#txtConveyance').val('');

        }
        else if (vehicle == "TwoWheeler") {
            document.getElementById("divLumpsumAmountDDL").style.display = "none";
            document.getElementById("divtxtConveyance").style.display = "inline";
            document.getElementById("divtxtLumpsumAmount").style.display = "none";
            $('#lumpsumORnot').val('');
            $('#txtLumpsumAmount').val('');
            $('#txtConveyance').val('');
        }

        else if (vehicle == "") {
            document.getElementById("divLumpsumAmountDDL").style.display = "none";
            document.getElementById("divtxtConveyance").style.display = "none";
            document.getElementById("divtxtLumpsumAmount").style.display = "none";
            $('#lumpsumORnot').val('');
            $('#txtLumpsumAmount').val('');
            $('#txtConveyance').val('');

        }
    });


    $(document).ready(function () {

        $('.popupposition').hide();
        $('.popuppositionsucess').hide();




        $.validator.addMethod("date", function (value, element) {
            if (value != "") {
                return value.match(/^\d\d?\/\d\d?\/\d\d\d\d$/);
            }
            else {

                return true;
            }
        },
        "Please enter a date in the format dd/mm/yyyy."
        );



        $('#ProfilePicturePath').bind('change', function () {

            //this.files[0].size gets the size of your file.

            var val = $(this).val().toLowerCase();
            var regex = new RegExp("(.*?)\.(jpg|jpeg|png|gif)$");

            if ($.browser.msie && (parseInt($.browser.version) == 9 || parseInt($.browser.version) == 8)) {

            } else {

                if (window.FormData !== undefined) {

                    if (this.files[0].size >= 6097152 || !(regex.test(val))) {

                        if (!(regex.test(val)) && val != "") {
                            $(this).val('');
                            $('#imgDisplay').attr('src', '');

                            alert('Unsupported file');
                            $("#ProfilePicturePath").replaceWith($("#ProfilePicturePath").clone(true));

                            $('#imgDisplay').hide();
                        }
                        else {

                            alert("Please enter below 6 MB");
                            $('#imgDisplay').attr('src', '');

                            $(this).val('');
                            $("#ProfilePicturePath").replaceWith($("#ProfilePicturePath").clone(true));
                            $('#imgDisplay').hide();

                        }

                    }
                    else {


                    }

                }
                else {


                }
             
              }


           



        });


        $('#imgDisplay').hide();
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgDisplay').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#ProfilePicturePath").change(function () {
            $('#imgDisplay').show();
            readURL(this);
        });
        $("#btnDelete").click(function (e) {
            e.preventDefault();

            $('#imgDisplay').attr('src', "#");
            $('#imgDisplay').hide();
            $("#ProfilePicturePath").val('');
        });

        $("#btnCancel").click(function (e) {
            e.preventDefault();
            var id = $("#Id").val();
            $("#AdminLoadingBg").fadeIn();
            $("#AdminLoadimg").show();
            $.ajax({
                url: "/Admin/CreateEmployee/" + id,
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html'

            })
                     .success(function (result) {
                         $("#AdminLoadingBg").fadeOut();
                         $("#AdminLoadimg").hide();
                         $('#divPartial').html('');
                         $('#divPartial').html(result);

                     })
                      .error(function (xhr, status) {
                          $("#AdminLoadingBg").fadeOut();
                          $("#AdminLoadimg").hide();
                      });
        });

        $('input:reset').click(function () {
            $("#FK_PermanentCity").empty();
            $("#FK_PermanentCity").append($("<option />").val('').text("Select Permanent District"));
            $("#FK_TempCity").empty();
            $("#FK_TempCity").append($("<option />").val('').text("Select Current District"));

        });
        //Allow users to enter numbers only
        $(".numericOnly").bind('keypress', function (e) {
            if (e.keyCode == '9' || e.keyCode == '16') {
                return;
            }
            var code;
            if (e.keyCode) code = e.keyCode;
            else if (e.which) code = e.which;
            if (e.which == 46) {
                return false;
            }
            if (code == 8 || code == 46) {
                return true;
            }
            if (code < 48 || code > 57) {
                return false;
            }
        });


        //Allow users to enter alphabets only(Small & Caps)
        $(".charOnly").bind('keypress', function (e) {
            if ((e.keyCode > 64 && e.keyCode < 91) || (e.keyCode > 96 && e.keyCode < 123) || e.keyCode == 8)
                return true;
            else {
                return false;
            }
        });

        //Allow users to enter alphanumeric
        $(".alphanumericOnly").bind('keypress', function (e) {
            if ((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 65 && e.keyCode <= 90) || (e.keyCode >= 95 && e.keyCode <= 122)) {
                return true;
            }
            else {
                return false;
            }
        });

        $(function () {
            $(document).tooltip();
        });

        $('.date').datepicker().on('changeDate', function (ev) {
            ev.preventDefault();
            $(this).datepicker('hide');

            if ($('#txtDOB').val() != "") {

                validateDOBDOJdates = ValidateDOBDOJDates()

            }

            //            var valid = $("#frmCreateEmployee").valid();

            //            if (valid) {
            //            }
            //            else {
            //                return;
            //            }
        });
        $("#btnRegister").click(function (e) {
            e.preventDefault();

            var empid = $('#txtEmpId').val();

            var filename = $('input[type=file]').val().split('\\').pop();

            if (filename != "" && filename != null) {
                $('#Temimagepath').val(filename);
            }
            var EmployeeID = $('#txtEmpId').val();


            var valid = $("#frmCreateEmployee").valid();
            //            alert(valid);
            if (valid && validateDOBDOJdates) {

                //                $("#CreateEmployeeLoadimg").show();
                $("#AdminLoadingBg").fadeIn();
                $("#AdminLoadimg").show();
                $.ajax({
                    cache: false,
                    type: 'POST',
                    url: '/Admin/CreateEmployee',
                    data: $("#frmCreateEmployee").serialize(),
                    dataType: 'json',
                    success: function (data) {
                        //                        $("#CreateEmployeeLoadimg").hide();
                        $("#AdminLoadingBg").fadeOut();
                        $("#AdminLoadimg").hide();
                        $('.popuppositionsucess').fadeIn();
                        $('#CreateProfileSucessspan').text('Employee Registration Successfully Completed');
                        $('.popuppositionsucess').show();
                        $('.popuppositionsucess').delay(3000).fadeOut('slow');


                        if ($.browser.msie && (parseInt($.browser.version) == 9 || parseInt($.browser.version) == 8)) {

                            uploadfileForIE()

                        }

                        if (filename != "" && filename != null) {
                            UploadProfileImg(filename, empid);
                        }

                        $('#result').text(data.Text);
                        if (data.Available === true) {
                            $('#result').text(data.Text);
                            $('#result').show();
                            $(':input', $("#frmCreateEmployee"))
                        .not(':button, :submit, :reset, :hidden')
                        .val('')
                        .removeAttr('selected');

                            setTimeout(function () {
                                $('#modelbg').hide();
                                $('#modelbg').hide();

                                $.ajax({
                                    url: "/shared/EmployeeList",
                                    contentType: 'application/html; charset=utf-8',
                                    type: 'GET',
                                    cache: false,
                                    dataType: 'html'
                                })
                     .success(function (result) {
                         $('#divPartial').html('');
                         $('#divPartial').html(result);
                     })
                      .error(function (xhr, status) {
                          // alert("2");
                      });
                            }, 3000);
                        }
                        else {
                            $('#result').text(data.Text);
                            $('#result').show();
                        }
                        $("#FK_PermanentCity").append('<option value="' + 0 + '">' + 'Select Permanent District' + '</option>');
                        $("#FK_PermanentCity").val(0);
                        $("#FK_TempCity").append('<option value="' + 0 + '">' + 'Select Current District' + '</option>');
                        $("#FK_TempCity").val(0);
                    },
                    failure: function () {
                        $("#AdminLoadingBg").fadeOut();
                        $("#AdminLoadimg").hide();
                        alert("fail");
                    }
                });
            }
            else {
                return;
            }
        });


        $("#mgrdiv").show();
        $("#accountmgrdiv").show();
        $("#ddlUsergroup").change(function (e) {
            e.preventDefault();

            var usergroupvalue = $('#ddlUsergroup').val();
            $('#ManagerId').get(0).selectedIndex = 0;
            $('#ddlAccountMgr').get(0).selectedIndex = 0;
            if (usergroupvalue == 3) {
                document.getElementById("mgrdiv").style.display = "inline";
                document.getElementById("accountmgrdiv").style.display = "inline";

            }
            else if (usergroupvalue == 1) {
                document.getElementById("mgrdiv").style.display = "none";
                document.getElementById("accountmgrdiv").style.display = "none";
            }
            else if (usergroupvalue == 2 || usergroupvalue == 4) {

                document.getElementById("mgrdiv").style.display = "none";
                document.getElementById("accountmgrdiv").style.display = "inline";
            }
            else {
                document.getElementById("mgrdiv").style.display = "inline";
                document.getElementById("accountmgrdiv").style.display = "inline";

            }
        });


        $("#ddlPermanentState").change(function (e) {
            e.preventDefault();
            var stateId = $('#ddlPermanentState').val();
            if (stateId != null) {
                $.ajax({
                    url: '/Admin/FillCities',
                    type: "GET",
                    dataType: "JSON",
                    data: { StateId: stateId },
                    success: function (cities) {
                        $("#FK_PermanentCity").empty();
                        $("#FK_PermanentCity").append($("<option />").val('').text("Select Permanent District"));
                        $.each(cities, function (i, city) {
                            $("#FK_PermanentCity").append('<option value="' + city.Value + '">' + city.Text + '</option>');
                        });
                    },
                    error: function (event, jqxhr, settings, exception) {
                        //                        alert(jqxhr);
                    }
                });
            }
            if (stateId == "") {
                $("#FK_PermanentCity").html("");
                $("#FK_PermanentCity").empty();
                $("#FK_PermanentCity").append($("<option />").val('').text("Select Permanent District"));
                $.each(cities, function (i, city) {
                    $("#FK_PermanentCity").append('<option value="' + city.Value + '">' + city.Text + '</option>');
                });

            }
        });
    });

    $("#ddlTempState").change(function (e) {
        e.preventDefault();
        var tempStateId = $('#ddlTempState').val();
        $.ajax({
            url: '/Admin/FillCities',
            type: "GET",
            data: { StateId: tempStateId },
            success: function (cities) {
                $("#FK_TempCity").empty();
                $("#FK_TempCity").append($("<option />").val('').text("Select Current District"));
                $.each(cities, function (i, city) {
                    $("#FK_TempCity").append('<option value="' + city.Value + '">' + city.Text + '</option>');
                });
            },
            error: function (event, jqxhr, settings, exception) {
                //                    alert(jqxhr);
            }
        });

        if (tempStateId == "") {
            $("#FK_TempCity").html("");
            $("#FK_TempCity").empty();
            $("#FK_TempCity").append($("<option />").val('').text("Select Current District"));
            $.each(cities, function (i, city) {
                $("#FK_TempCity").append('<option value="' + city.Value + '">' + city.Text + '</option>');
            });
        }
    });


    $("#txtEmpId").change(function (e) {
        e.preventDefault();
        var EmployeeID = $('#txtEmpId').val();

        $.ajax({
            url: '/Admin/CheckEmployeeID',
            type: "GET",
            data: { EmpID: EmployeeID },
            success: function (data) {
                if (data >= 1) {
                    $("#txtEmpId").val("");


                    $(".popupposition").fadeIn();
                    $('#createemperrormessage').text('Employee ID already exist, please enter new Employee ID');
                    $('#createemperrormessage').show();
                    $('.popupposition').delay(3000).fadeOut('slow');

                    // alert('Employee ID already exist, please enter new Employee ID');
                    $('#txtEmpId').focus();
                }
            },
            error: function (event, jqxhr, settings, exception) {
                //                    alert(jqxhr);
            }
        });
    });

    $("#txtAadharNo").change(function (e) {
        e.preventDefault();
        var adharno = $('#txtAadharNo').val();

        $.ajax({
            url: '/Admin/CheckAadharID',
            type: "GET",
            data: { AadharID: adharno },
            success: function (data) {
                // alert(data);
                if (data >= 1) {
                    $("#txtAadharNo").val("");

                    $(".popupposition").fadeIn();
                    $('#createemperrormessage').text('Aadhar number already exist, please enter new number');
                    $('#createemperrormessage').show();
                    $('.popupposition').delay(3000).fadeOut('slow');

                    //alert(' Aadhar number already exist, please enter new number');
                    $('#txtAadharNo').focus();
                }
            },
            error: function (event, jqxhr, settings, exception) {
                //                    alert(jqxhr);
            }
        });
    });

    $("#txtPANNo").change(function (e) {
        e.preventDefault();
        var pan = $('#txtPANNo').val();

        $.ajax({
            url: '/Admin/CheckPancard',
            type: "GET",
            data: { Pancard: pan },
            success: function (data) {
                if (data >= 1) {
                    $("#txtPANNo").val("");

                    $(".popupposition").fadeIn();
                    $('#createemperrormessage').text('Pancard number already exist, please enter new number');
                    $('#createemperrormessage').show();
                    $('.popupposition').delay(3000).fadeOut('slow');

                    // alert(' Pancard number already exist, please enter new number');
                    $('#txtPANNo').focus();
                }
            },
            error: function (event, jqxhr, settings, exception) {
                //                    alert(jqxhr);
            }
        });
    });

    $("#txtDrivingLiceneNo").change(function (e) {
        e.preventDefault();
        var driving = $('#txtDrivingLiceneNo').val();

        $.ajax({
            url: '/Admin/CheckDrivingLicenceNo',
            type: "GET",
            data: { DrivingLicence: driving },
            success: function (data) {
                if (data >= 1) {
                    $("#txtDrivingLiceneNo").val("");
                    $(".popupposition").fadeIn();
                    $('#createemperrormessage').text('Driving licence number already exist, please enter new number');
                    $('#createemperrormessage').show();
                    $('.popupposition').delay(3000).fadeOut('slow');

                    //alert(' Driving licence number already exist, please enter new number');
                    $('#txtDrivingLiceneNo').focus();
                }
            },
            error: function (event, jqxhr, settings, exception) {
                //                    alert(jqxhr);
            }
        });
    });


    //    $("#ddlZone").change(function (e) {
    //        e.preventDefault();

    //        var zoneId = $('#ddlZone').val();

    //        if (zoneId > 0) {

    //            $.ajax({
    //                url: '/Admin/GetManagersList',
    //                type: "GET",
    //                data: { ZoneId: zoneId },
    //                success: function (data) {
    //                    $("#ManagerId").empty();
    //                    $("#ManagerId").append($("<option />").val('').text("Select Manager"));
    //                    $.each(data, function () {
    //                        $("#ManagerId").append($("<option />").val(this.Id).text(this.Employee_ID + " [" + this.FirstName + "] "));
    //                    });
    //                },
    //                error: function (event, jqxhr, settings, exception) {

    //                }
    //            });
    //        }
    //        else {
    //            $("#ManagerId").empty();
    //            $("#ManagerId").append($("<option />").val('').text("Select Manager"));
    //        }

    //    });


    function UploadProfileImg(file, empid) {


        var files = $("#ProfilePicturePath").get(0).files;

        if (files.length > 0) {
            if (window.FormData !== undefined) {
                var data = new FormData();

                if (files.length > 0) {

                    data.append(file, files[0]);
                }
                $.ajax({
                    type: "POST",
                    url: '/Admin/UploadProfileImage?id=' + empid,
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        console.log(result);
                    },
                    error: function (xhr, status, p3, p4) {
                        var err = "Error " + " " + status + " " + p3 + " " + p4;
                        if (xhr.responseText && xhr.responseText[0] == "{")
                            err = JSON.parse(xhr.responseText).Message;
                        console.log(err);
                    }
                });
            } else {




//                uploadfileForIE();

//                $('#createemperrormessage').text("This browser doesn't support HTML5 file uploads!");
                $('#createemperrormessage').show();
                $('#createemperrormessage').delay(3000).fadeOut('slow');

//                alert("This browser doesn't support HTML5 file uploads!");
            }
        }


    }



    $(".update").click(function (e) {
        e.preventDefault();

        var redirecturl = $(this).attr('href');
        //        alert(redirecturl);
        $("#AdminLoadingBg").fadeIn();
        $("#AdminLoadimg").show();
        $.ajax({
            url: redirecturl,
            contentType: 'application/html; charset=utf-8',
            type: 'GET',
            dataType: 'html'

        })
       .success(function (result) {
           $("#AdminLoadingBg").fadeOut();
           $("#AdminLoadimg").hide();
           $('#divPartial').show();
           //alert(result);
           $('#divPartial').html(result);
       })
       .error(function (xhr, status) {
           //alert("2");
       });
    });

    
</script>
