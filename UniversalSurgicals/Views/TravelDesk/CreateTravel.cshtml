@using Universal.BusinessEntities;
@model TravelDesk
@Scripts.Render("~/bundles/jqueryval")
<script src="../../Scripts/dropzone/dropzone.min.js" type="text/javascript"></script>
<style>

    body
    {
        background-color: #e5e9ec;
    }
    .page-content
    {
        position: relative !important;
        width: auto !important;
    }
    .datepicker-dropdown.datepicker-orient-left::before
    {
        left: 179px;
    }
    .datepicker-dropdown.datepicker-orient-left::after
    {
        left: 180px;
    }
  @*  .selectcat catedis_title
    {
        padding: 0px;
        margin: 0px;
        font-size: 13px;
        color: #000;
    }
    
    .catedis_titlePhoto
    {
        padding: 10px 10px 10px 0px;
        margin: 0 0 0 8px;
        font-size: 13px;
        color: #000;
        border: 1px solid #E6E6E6;
        width: 708px;
        float: left;
    }*@
</style>


@if (Session["TravelManager"] != null)
{
    <style>
.dropzone .dz-default.dz-message {
  opacity: 1;
  -ms-filter: none;
  filter: none;
  -webkit-transition: opacity 0.3s ease-in-out;
  -moz-transition: opacity 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out;
  -ms-transition: opacity 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out;
  background-image: url("../../Content/Images/AddTicket.png");
  background-repeat: no-repeat;
  background-position: 0 0;
  position: absolute;
  width: 100%;
  height: 123px;
  margin-left: -349px;
  margin-top: -61.5px;
  top: 50%;
  left: 50%;
}
  
    </style>
}




<form id="frmCreateTravelDesk">
<div id="some_grid_container1">
    <div class="col-lg-12 search-strip">
        <div class="col-lg-3 pull-right">
            <a href="@Url.Action("TravelDesk", "Shared")" class="md-trigger update frm-src-fld update" data-modal="modal-16">
                <i class="fa fa-arrow-left"></i> Travel Desk List </a>
        </div>
    </div>
</div>
<div class="content-cont col-lg-12 col-md-12 no-padding" id="test">
    <div class=" container-fluid emp-exd-frm margin-20 p-b-20">
        <div class="grid-hd col-lg-12 col-md-12 col-sm-12">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 ">
                <i class="fa fa-bus"></i> Create Travel</div>

        <div class="popupposition">

                                            <div class="alert alert-success" id="sucessalertdiv" runat="server">
                  @*<a href="#" class="close" data-dismiss="alert" >&times;</a>*@
                           <strong>Success!</strong><br /><span id="result"></span>
                            </div>


@*                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 col-md-4 emp-exp-dt pull-right">
                     <div class="alert alert-success" id="result" style="display: none;">
        </div>
               
                </div>*@

                </div>

                     <div class="clearfix">
                    </div>
        
        </div>
        <div class="clearfix">
        </div>
        <div class="col-lg-12 m-t-20">
            @*employee id*@
            <div class="col-lg-3 col-md-6  m-b-10">
                <div class="controls">
                    @if (ViewBag.empList != null)
                    {
                      
                        @Html.DropDownList("FK_EmployeeId", ViewBag.empList as List<SelectListItem>, "Select Employee", new { @class = "form-control", @id = "ddlZone", @placeholder = "Select Employee ID", @Title = "Select Employee ID" })
                        @Html.ValidationMessageFor(Model => Model.FK_EmployeeId)
                      
                    }
                </div>
            </div>
            @*From Location*@
            <div class="col-lg-3 col-md-4  m-b-10 ">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.FromLocation, new { @class = "form-control", @id = "txtfromlocation", @placeholder = "From Location", @Title = "From Location" })
                    @Html.ValidationMessageFor(Model => Model.FromLocation)
                </div>
            </div>
            @*To Location*@
            <div class="col-lg-3  col-md-6  m-b-10">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.ToLocation, new { @class = "form-control", @id = "txttolocation", @placeholder = "To Location", @Title = "To Location" })
                    @Html.ValidationMessageFor(Model => Model.ToLocation)
                </div>
            </div>
        </div>
        @*Ticket Booked Date *@
        <div class="col-lg-3 col-md-6  m-b-10">
            <div class="input-append success date col-md-10 col-lg-11 no-padding">
                @Html.TextBoxFor(Model => Model.TraveledFromDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtticketbookeddate", @placeholder = "Travel From Date", @Title = "Travel From Date",@type="date-local"})
                @Html.ValidationMessageFor(Model => Model.TraveledFromDate) <span class="add-on"><i
                    class="fa fa-calendar"></i></span>
            </div>
        </div>
        <div class="clearfix">
        </div>


        @*Mode of Transport*@
        <div class="col-lg-3 col-md-6  m-b-10">
            <div class="controls">
                @Html.DropDownListFor(Model => Model.ModeofTransportFrom, new List<SelectListItem>

{ 
   new SelectListItem { Text = "Bus", Value = "Bus"},
   new SelectListItem { Text = "Train", Value = "Train"},
   new SelectListItem { Text = "Flight", Value = "Flight"},
  
}, "Select Mode Of Transport", new { @title = "Mode Of Transport", @placeholder = "Mode Of Transport", @id = "ddlFromModeTransport" })
                @Html.ValidationMessageFor(Model => Model.ModeofTransportFrom)
            </div>
        </div>

         <div class="col-lg-3 col-md-6  m-b-10">

                     <div class="checkbox check-info">
                <input id="returnjourney" type="checkbox" />
                <label for="returnjourney">
                    Return Journey</label>
            </div>

         </div>

         <div class="col-lg-12">
            @*Date of Journey*@
            <div class="col-lg-3 col-md-4  m-b-10 " id="tojourney" style="display: none">
                <div class="input-append success date col-md-10 col-lg-11 no-padding">
                    @Html.TextBoxFor(Model => Model.TraveledToDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "txtToJourney", @placeholder = "Travel To Date", @Title = "Travel To Date",@type="date-local" })
                    @Html.ValidationMessageFor(Model => Model.TraveledToDate)
                    <span class="add-on"><i class="fa fa-calendar"></i></span>
                </div>
            </div>


            @*Mode of Transport*@
             
            <div class="col-lg-3 col-md-6  m-b-10" id="toModeofTransport" style="display: none">
                <div class="controls">
                    @Html.DropDownListFor(Model => Model.ModeofTransport, new List<SelectListItem>

{ 
   new SelectListItem { Text = "Bus", Value = "Bus"},
   new SelectListItem { Text = "Train", Value = "Train"},
   new SelectListItem { Text = "Flight", Value = "Flight"},
  
}, "Select To Journey Transport", new { @title = "Mode Of Transport", @placeholder = "Mode Of Transport", @id = "ddlModeTransport" })
                    @Html.ValidationMessageFor(Model => Model.ModeofTransport)
                </div>
            </div>
        </div>



        <div class="clearfix">
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  m-l-20">

        </div>
        <div class="clearfix">
        </div>
        
        <div class="clearfix">
        </div>
        <div class="col-lg-12" style="padding:0 0 10px 35px;">
        <label style="font-weight:bold; font-family:Open Sans">Travel Purpose</label>

                          <div class="check-info" style="float:left; padding-right:50px;">
                <input id="traveltraining" type="radio" name="travel" value="Training" checked /> Training
 
            </div>

                             <div class="check-info" style="float:left; padding-right:50px;">
                <input id="travelother" type="radio" name="travel" /> Other
        
            </div>

            @*Travel Purpose*@
            <div class="col-lg-3 col-md-4  m-b-10 " id="othertravelpurpose" style="display: none; float:left;">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.Purpose, new { @class = "form-control", @id = "txttravelpurpose", @placeholder = "Enter Purpose", @Title = "Travel Purpose" })
                    @Html.ValidationMessageFor(Model => Model.Purpose)
                </div>
            </div>

 

             <div class="clearfix">
        </div>
        </div>


        <div class="clearfix">
        </div>
        <div id="hideaccommodation">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  m-l-20">
                <div class="checkbox check-info">
                    <input id="hotelbooking" type="checkbox" />
                    <label for="hotelbooking">
                        Accommodation</label>
                </div>
            </div>
            <div class="clearfix">
            </div>
            <div class="col-lg-12">
                @*Hotel Booking*@ @*            <div class="col-lg-3 col-md-6  m-b-10">
                <div class="controls">
                    @Html.DropDownListFor(Model => Model.HotelBooking, new List<SelectListItem>

{ 
   new SelectListItem { Text = "Yes", Value = "Yes"},
   new SelectListItem { Text = "No", Value = "No"},
  
}, "Select Hotel Booking",new{@id="ddlHoltelBooking"})
                   
                </div>
            </div>*@
                <div id="hotelbokingdiv" style="display: none;">
                    @*Hotel Details*@
                    <div class="col-lg-3 col-md-4  m-b-10 ">
                        <div class="controls">
                            @Html.TextAreaFor(Model => Model.HotelDetails, new { @class = "form-control", @id = "txtHotelDetails", @placeholder = "Hotel Details", @Title = "Hotel Details", @maxlength = "1000" })
                            @Html.ValidationMessageFor(Model => Model.HotelDetails)
                        </div>
                    </div>
                    @*Hotel Booking Amount*@
                    <div class="col-lg-3 col-md-4  m-b-10 ">
                        <div class="controls">
                            @Html.TextBoxFor(Model => Model.HotelBookingAmount, new { @class = "form-control numericOnly", @id = "txtHotelamount", @placeholder = "Hotel Booking Amount", @Title = "Hotel Booking Amount", @maxlength = "6" })
                            @Html.ValidationMessageFor(Model => Model.HotelBookingAmount)
                        </div>
                    </div>
                    @* Checked In date*@
                    <div class="col-lg-3 col-md-4  m-b-10">
                        <div class="input-append success date col-md-10 col-lg-11 no-padding">
                            @Html.TextBoxFor(Model => Model.CheckedIndate, "{0:dd/MM/yyyy}", new { @class = "form-control ", @id = "checkedIndate", @placeholder = "Checked In Date", @Title = "Checked In Date",@type="date-local" })
                            @Html.ValidationMessageFor(Model => Model.CheckedIndate)
                            <span class="add-on"><i class="fa fa-calendar "></i></span>
                        </div>
                    </div>
                    @* Checked Out date*@
                    <div class="col-lg-3 col-md-4  m-b-10">
                        <div class="input-append success date col-md-10 col-lg-11 no-padding">
                            @Html.TextBoxFor(Model => Model.CheckedOutdate, "{0:dd/MM/yyyy}", new { @class = "form-control", @id = "checkedOutdate", @placeholder = "Checked Out Date", @Title = "Checked Out Date", @type = "date-local" })
                            @Html.ValidationMessageFor(Model => Model.CheckedOutdate)
                            <span class="add-on"><i class="fa fa-calendar"></i></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix">
            </div>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12  m-l-20">
            <div class="checkbox check-info">
                <input id="advanceamt" type="checkbox" />
                <label for="advanceamt">
                    Advance Amount</label>
            </div>
        </div>
        <div class="clearfix">
        </div>
        <div id="advnAmount" style="display: none;">
            <div class="col-lg-12">
                <div class="col-lg-3 col-md-4  m-b-10 ">
                    <div class="controls">
                        @Html.TextBoxFor(Model => Model.AdvanceAmount, new { @class = "form-control numericOnly", @id = "txtAdvanceamount", @placeholder = "Advance Amount", @Title = "Advance Amount", @maxlength = "6" })
                        @Html.ValidationMessageFor(Model => Model.AdvanceAmount)
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix">
        </div>



   
        <div class="col-lg-12">
        
                       @*Ticket Amount*@
            <div class="col-lg-3 col-md-4  m-b-10 " style="float:left;">
                <div class="controls">
                    @Html.TextBoxFor(Model => Model.TotalTicketAmount, new { @class = "form-control numericOnly", @id = "txttotalticketamount", @placeholder = "Total Ticket Amount", @Title = "Total Ticket Amount", @maxlength = "6" })
                    @Html.ValidationMessageFor(Model => Model.TotalTicketAmount)
                </div>
            </div>
        
        </div>



             
          <div class="clearfix">
        </div>



        @* OverallComments*@
        <div class="col-lg-10 col-md-10  m-b-10 m-l-20 ">
            <div class="controls">
                @Html.TextAreaFor(Model => Model.OverallComments, new { @class = "form-control", @id = "txtComments", @placeholder = "Over all Comments", @Title = "Over all Travel Comments", @maxlength = "1000" })
                @Html.ValidationMessageFor(Model => Model.OverallComments)
            </div>
        </div>
        <div class="clearfix">
        </div>
        <label id="lblvalidation">
        </label>
        <div class="selectcat" id="TravelUpload" style="display: ;">
            <div class="catedis_titlePhoto" id="NotIePhoto">
                <input type="file" multiple="true" name="File1" id="IePhoto" class="multi max-6" />
                <div class='dzq-success-msg-panel hide'>
                    Only 10 Tickets are allowed!</div>
                <div class="dropzone-previews">
                </div>
                <div class="dropzone" id="dropzoneForm">
                </div>
            </div>
        </div>

        @*submit and reset buttons*@
  
        <div class="col-lg-3" style="text-align: right; width: 100%">
            <div>
                <button type="submit" class="md-trigger" id="btntravelsend" name="btntravelsend"
                    data-toggle="tooltip" data-placement="top" title="Submit Travel Information"
                    value="Send">
                    Send</button>
            </div>
        </div>
        <div class="clearfix">
        </div>

        <div class="col-lg-12">
        
        <label id="lblfrmtovalidate" class="alert alert-danger errorwidth"></label>
        <label id="lblcheckinoutvaliddate" class="alert alert-danger errorwidth"></label>
        
        </div>

@*          <div class="col-lg-12 pull-right" style="padding-top:15px;">
                        <img src="../../Content/Images/loading.gif" alt="Smiley face" height="80" width="80" id="CreateTravelloading" style="display:;">
                   </div>*@

                   <div id="CreateTravelLoadimg" runat="server" style="text-align: center; padding: 50px; display:none; height:100%; width:100%; z-index:10000; position:fixed; top:40%; left:5%;"> <img alt="loading" src="../../Content/Images/loading.gif" height="300" width="300" /></div>
                   


    </div>
</div>
</form>

<!--[if lt IE 10]>
 <script type="text/javascript">
     $(function () {
         // Invoke the plugin
         $('input, textarea').placeholder({ customClass: 'my-placeholder' });

     });
		</script>
          <![endif]-->

                     <script type="text/javascript">
                         $('.update').bind('contextmenu', function (e) {
                             alert("Mouse right click disabled");
                             return false;
                         }); 
        </script>

<script type="text/javascript">

     
    var validatedt = false;

    var validatecheckInoutdt = false;



    function validateDateEE() {




        $.ajax({
            cache: false,
            url: '/Shared/ValidateTravelDeskDate',
            type: 'POST',
            data: { id: $('#ddlZone').val(), fromdate: $('#txtticketbookeddate').val(), todate: $('#txtToJourney').val() },
            dataType: 'json',
            success: function (data) {
                // alert("success");
                // $('#result').removeAttr('class').attr('class', ((data.Available) ? 'username-available-status' : 'username-not-available-status'));




                if (!data) {

                    $('#lblvalidation').text("Please check the assigned Dates");

                    alert("Please check the assigned Dates")

                    validatedt = false;

                } else {

                    validatedt = true;

                    $('#lblvalidation').text("");

                }



            },
            failure: function () {
                alert("fail");
            }



        });




    }

    $(document).ready(function () {

        $('#lblfrmtovalidate').hide();

        $('#lblcheckinoutvaliddate').hide();

        $(".popupposition").hide();


        $.validator.addMethod("date", function (value, element) {

            return value.match(/^\d\d?\/\d\d?\/\d\d\d\d$/);
        },
    "Please enter a date in the format dd/mm/yyyy."
);



        function ValidateFromReturnDates() {


            var fromdt = $("#txtticketbookeddate").val().split("/");

            var fromdate = new Date(fromdt[2], fromdt[1] - 1, fromdt[0]);

            var returndt = $("#txtToJourney").val().split("/");

            var returndate = new Date(returndt[2], returndt[1] - 1, returndt[0]);


            if (fromdt != '' && fromdate != 'Invalid Date' && $("#returnjourney").prop('checked') == true && returndt != '' && returndate != 'Invalid Date') {

                if (fromdate <= returndate) {

                    if (fromdate < returndate) {

                        $("#hideaccommodation").show();
                        if ($("#hotelbooking").prop('checked') == true) {
                            $("#hotelbokingdiv").show();
                        }
                        else {
                            $("#hotelbokingdiv").hide();
                        }
                    }
                    else {

                        $('#hideaccommodation input').val('');
                        $('#hideaccommodation textarea').val('');

                        $('#hotelbooking').prop('checked', false);
                        $("#hideaccommodation").hide();

                    }
                    $('#lblfrmtovalidate').hide();
                    $('#lblfrmtovalidate').text("");
                    $('#lblcheckinoutvaliddate').hide();
                    $('#lblcheckinoutvaliddate').text("");
                    return true;

                }
                else {

                    $('#lblfrmtovalidate').show();
                    $('#lblfrmtovalidate').text("Todate Should be Greater than or Equal to Fromdate");

                    return false;
                }

            }
            else if ($("#returnjourney").prop('checked') == false && fromdt != '' && fromdate != 'Invalid Date') {
                $('#lblfrmtovalidate').hide();
                $('#lblfrmtovalidate').text("");

                return true;
            }

            else {

                if (fromdt == '' && fromdate == 'Invalid Date') {
                    $('#lblfrmtovalidate').hide();
                    $('#lblfrmtovalidate').text("Please Select From date");

                }
                else if ($("#returnjourney").prop('checked') == true) {
                    if (returndate == '' && returndate == 'Invalid Date') {
                        $('#lblfrmtovalidate').hide();
                        $('#lblfrmtovalidate').text("Please Select Todate");
                    }
                }
                else {


                }


                return false;
            }


        }


        function ValidateCheckInOutDates(returnjrstatus) {

            var fromdt = $("#txtticketbookeddate").val().split("/");

            var fromdate = new Date(fromdt[2], fromdt[1] - 1, fromdt[0]);

            var returndt = $("#txtToJourney").val().split("/");

            var returndate = new Date(returndt[2], returndt[1] - 1, returndt[0]);

            var checkindt = $("#checkedIndate").val().split("/");

            var checkindate = new Date(checkindt[2], checkindt[1] - 1, checkindt[0]);

            var checkoutdt = $("#checkedOutdate").val().split("/");

            var checkoutdate = new Date(checkoutdt[2], checkoutdt[1] - 1, checkoutdt[0]);


            if (returnjrstatus == true) {

                if (fromdt != '' && fromdate != 'Invalid Date' && returndt != '' && returndate != 'Invalid Date' && checkindt != '' && checkindate != 'Invalid Date' && checkoutdt != '' && checkoutdate != 'Invalid Date') {


                    if (checkoutdate >= checkindate && fromdate <= checkindate && checkoutdate <= returndate) {

                        $('#lblcheckinoutvaliddate').text("");
                        $("#lblcheckinoutvaliddate").hide();

                        return true;
                    }
                    else {
                        $("#lblcheckinoutvaliddate").show();
                        $('#lblcheckinoutvaliddate').text("Checkin, Checkout dates must be within from and todates ");

                        return false;
                    }


                }
                else {

                    if (checkindate != 'Invalid Date' && checkoutdt != '' && checkoutdate != 'Invalid Date') {

                    }
                    else {

                        $("#lblcheckinoutvaliddate").hide();
                        $('#lblcheckinoutvaliddate').text("Please enter the Checkin, Checkout dates");

                    }


                    return false;
                }

            }
            else {

                if (fromdt != '' && fromdate != 'Invalid Date' && checkindt != '' && checkindate != 'Invalid Date' && checkoutdt != '' && checkoutdate != 'Invalid Date') {

                    if (checkindate >= fromdate && checkindate <= checkoutdate) {
                        $("#lblcheckinoutvaliddate").hide();
                        $('#lblcheckinoutvaliddate').text("");

                        return true;
                    }
                    else {
                        $("#lblcheckinoutvaliddate").show();
                        $('#lblcheckinoutvaliddate').text("Checkin, Checkout dates must be within from and todates and checkout should be greater than checkin");

                        return false;
                    }

                }
                else {
                    $("#lblcheckinoutvaliddate").hide();

                    $('#lblcheckinoutvaliddate').text("Enter valid Checkin and Checkout dates");

                    return false;

                }

            }




        }




        $("#txtComments,#ddlEmpID,#txtfromlocation,#txttolocation,#txtticketbookeddate,#returnjourney,#txtToJourney,#txttravelpurpose,#txttotalticketamount,#hotelbooking,#txtHotelDetails,#txtHotelamount,#checkedIndate,#checkedOutdate,#advanceamt,#txtAdvanceamount,#idmodeoftransport").tooltip({ track: true });


        //        $("#txtticketbookeddate").change(function () {

        //            var startDate = document.getElementById("txtticketbookeddate").value;
        //           

        //            var today = new Date();

        //            if ((Date.parse(startDate) < Date.parse(today))) {
        //                alert("Ticket date should be greater than Today date");
        //                document.getElementById("txtToJourney").value = "";
        //            }


        //        });


        $("#txtticketbookeddate,#txtToJourney,#checkedIndate,#checkedOutdate").change(function () {



            //            var startDate = document.getElementById("txtticketbookeddate").value;
            //            var endDate = document.getElementById("txtToJourney").value;
            //            var strtDate = document.getElementById("checkedIndate").value;
            //            var EndDate = document.getElementById("checkedOutdate").value;

            //            if ((Date.parse(startDate) > Date.parse(endDate))) {
            //                alert("End date should be greater than Start date");
            //                document.getElementById("txtToJourney").value = "";
            //            }

            //            if ((Date.parse(strtDate) < Date.parse(startDate)) || (Date.parse(strtDate) > Date.parse(endDate))) {
            //                alert("checkedin date should be within fromdate and todate");
            //                document.getElementById("checkedIndate").value = "";
            //            }

            //            if ((Date.parse(EndDate) < Date.parse(startDate)) || (Date.parse(EndDate) > Date.parse(endDate))) {
            //                alert("checkedout date should be within fromdate and todate");
            //                document.getElementById("checkedOutdate").value = "";
            //            }

            //            if ((Date.parse(startDate) == Date.parse(endDate))) {

            //                $("#hideaccommodation").hide();
            //            }
            //            else {

            //                $("#hideaccommodation").show();
            //            }


        });

        $("#checkedIndate,#checkedOutdate").change(function () {

            //            var strtDate = document.getElementById("checkedIndate").value;
            //            var EndDate = document.getElementById("checkedOutdate").value;

            //            if ((Date.parse(EndDate) < Date.parse(strtDate))) {
            //                alert("Checkedout date should be greater than Checkedin date");
            //                document.getElementById("checkedOutdate").value = "";
            //            }




        });


        $("#travelother").click(function () {

            $("#othertravelpurpose").toggle(this.checked);
            $("#txttravelpurpose").val('');
        });

        $("#traveltraining").click(function () {

            $("#othertravelpurpose").hide();
            $("#txttravelpurpose").val('');
        });



        $('#hotelbooking').change(function () {

            if ($(this).is(":checked")) {

            }
            else {
                $("#lblcheckinoutvaliddate").hide();
                $('#lblcheckinoutvaliddate').text('');
                validatecheckInoutdt = true;
            }

        });



        $('#txtticketbookeddate,#txtToJourney,#checkedIndate,#checkedOutdate').datepicker({ format: 'dd/mm/yyyy' }).on('changeDate', function (ev) {

            ev.preventDefault();

            $(this).datepicker('hide');



            validatedt = ValidateFromReturnDates();


            if ($("#hotelbooking").prop('checked') == true && $("#hideaccommodation").is(":visible")) {

                var returnjrstatus = $("#returnjourney").prop('checked');

                validatecheckInoutdt = ValidateCheckInOutDates(returnjrstatus);


            }
            else {

                validatecheckInoutdt = true;



            }



        });


        $('[data-toggle="tooltip"]').tooltip();

        $(function () {
            $(document).tooltip();
        });
        //        $('.date').datepicker().on('changeDate', function (ev) {
        //            ev.preventDefault();
        //            $(this).datepicker('hide');

        //            alert($get("txtToJourney").checked);


        //            var fromdt = $("#txtticketbookeddate").val().split("/");

        //            var returndt = $("#txtToJourney").val().split("/");

        //            var fromdate = new Date(fromdt[2], fromdt[1] - 1, fromdt[0]);

        //            var returndate = new Date(fromdt[2], fromdt[1] - 1, fromdt[0]);


        //            alert($get("txtToJourney").checked);

        //            if ($("#txtticketbookeddate").val().length > 0) {

        //                if (fromdate <= returndate) {

        //                    return true;
        //                }
        //                else {

        //                    return false;
        //                }

        //            }



        //            if ($('#ddlZone').val() != "")
        //                validateDate();


        //        });

        $("#ddlZone").change(function () {



            if (($('#txtticketbookeddate').val() != '' || $('#txtToJourney').val() != '') && $('#ddlZone').val() != '')
                validateDate();

        });


        $("#returnjourney").click(function () {
            $("#tojourney").toggle(this.checked);
            $("#toModeofTransport").toggle(this.checked);

            $("#txtToJourney").val('');
            $("#txtToJourney-error").empty();
            $("#ddlModeTransport").val('');
            $("#ddlModeTransport-error").empty();
            $("#hideaccommodation").show();
            $("#txtToJourney-error,#txttravelpurpose-error,#ddlModeTransport-error,#txttotalticketamount-error").empty();

        });


        $("#advanceamt").click(function () {

            $("#advnAmount").toggle(this.checked);
            $("#txtAdvanceamount").val('');
            $("#txtAdvanceamount-error").empty();


        });



        $('#hotelbooking').click(function () {
            $("#hotelbokingdiv").toggle(this.checked);
            $("#txtHotelDetails").val('');
            $("#txtHotelamount").val('');
            $("#checkedIndate").val('');
            $("#checkedOutdate").val('');
            $("#txtHotelDetails-error,#txtHotelamount-error,#checkedIndate-error,#checkedOutdate-error").empty();

        });

//        $("#btntravelsend").click(function (e) {
//            e.preventDefault();






//            validatedt = ValidateFromReturnDates();


//            if ($("#hotelbooking").prop('checked') == true && $("#hideaccommodation").is(":visible")) {

//                var returnjrstatus = $("#returnjourney").prop('checked');

//                validatecheckInoutdt = ValidateCheckInOutDates(returnjrstatus);


//            }
//            else {

//                validatecheckInoutdt = true;



//            }



//            var valid = $("#frmCreateTravelDesk").valid();


//            if (valid && validatedt && validatecheckInoutdt) {
//                $("#CreateTravelLoadimg").show();
//                $.ajax({
//                    cache: false,
//                    type: 'POST',
//                    url: '/TravelDesk/CreateTravel',
//                    data: $("#frmCreateTravelDesk").serialize(),
//                    dataType: 'json',
//                    success: function (data) {
//                        $("#CreateTravelLoadimg").hide();
//                        if (data.Available === true) {
//                            $('#result').text(data.Text);
//                            $('#result').show();
//                            $(".popupposition").show();
//                            $(':input', $("#frmCreateTravelDesk"))
//                        .not(':button, :submit, :reset, :hidden')
//                        .val('')
//                        .removeAttr('selected');
//                            $('#modelbg').hide();
//                            $('#modelbg').hide();

//                            setTimeout(function () {

//                                $.ajax({
//                                    url: "/Shared/TravelDesk",
//                                    contentType: 'application/html; charset=utf-8',
//                                    type: 'GET',
//                                    cache: false,
//                                    dataType: 'html'

//                                })
//                   .success(function (result) {

//                       $('#divPartial').show();
//                       //  alert(result);
//                       $('#divPartial').html(result);
//                   })
//                   .error(function (xhr, status) {
//                       // alert("2");
//                   });
//                            }, 7000);



//                        }
//                        else {
//                            $('#result').text(data.Text);
//                            $('#result').show();
//                        }


//                    },
//                    failure: function () {
//                        alert("fail");
//                    }

//                });
//            }
//            else {

//                // alert('else');
//                return;

//            }

//        });

        $('#TravelUpload').show();
        $('#IePhoto').hide();
        $('#NotIePhoto').show();
        $('.catedis_titlePhoto').show();
        var _this;
        var filename;


        $("#dropzoneForm").dropzone({
            maxFiles: 10,
            previewsContainer: ".dropzone-previews",
            maxfilesexceeded: function (file) {
                this.removeFile(file);
                var h = this.getAcceptedFiles().length;
                if (h == 10 && jQuery(".dzq-success-msg-panel").hasClass("hide")) {
                    jQuery(".dzq-success-msg-panel").removeClass("hide")
                }
            },
            accept: function (file, done) {
                var re = /(?:\.([^.]+))?$/;
                var ext = re.exec(file.name)[1];
                ext = ext.toUpperCase();
                if (ext == "PNG" || ext == "PDF" || ext == "DOCX" || ext == "DOC" || ext == "JPEG" || ext == "JPG") {
                    done();
                }
                else {
                    alert("just select png or pdf or docx or doc or jpeg or jpg files.");
                    this.removeFile(file);
                }
            },
            autoProcessQueue: false,
            url: '/TravelDesk/UploadTickets',
            uploadMultiple: false,
            parallelUploads: 100,
            init: function () {
                var myDropzone = this;
                $('#frmCreateTravelDesk').submit('submit', function (e) {
//                    alert('6');
                    e.preventDefault();
                    e.stopPropagation();
                    validatedt = ValidateFromReturnDates();

//                    alert('7');
                    if ($("#hotelbooking").prop('checked') == true && $("#hideaccommodation").is(":visible")) {
//                        alert('8');
                        var returnjrstatus = $("#returnjourney").prop('checked');

                        validatecheckInoutdt = ValidateCheckInOutDates(returnjrstatus);


                    }
                    else {

                        validatecheckInoutdt = true;



                    }
                    var isValid = $(this).valid();
                    var valid = $("#frmCreateTravelDesk").valid();
                    if (isValid && valid && validatedt && validatecheckInoutdt) {
//                        alert('url');
                        $("#CreateTravelLoadimg").show();

                        $.ajax({
                            cache: false,
                            type: 'POST',
                            url: "/TravelDesk/CreateTravel",
                            data: $("#frmCreateTravelDesk").serialize(),
                            dataType: 'json',
                            success: function (data) {
                                $("#CreateTravelLoadimg").hide();
                                $('.dzq-success-msg-panel').hide();
                                if (data.Available === true) {
                                    myDropzone.processQueue();
                                    $('#result').text(data.Text);
                                    $('#result').show();
                                    $(".popupposition").show();
                                    $(':input', $("#frmCreateTravelDesk"))
                        .not(':button, :submit, :reset, :hidden')
                        .val('')
                        .removeAttr('selected');
                                    $('#modelbg').hide();
                                    $('#modelbg').hide();
                                    $('.dropzone-previews').html('');

                                    setTimeout(function () {

                                        $.ajax({
                                            url: "/Shared/TravelDesk",
                                            contentType: 'application/html; charset=utf-8',
                                            type: 'GET',
                                            cache: false,
                                            dataType: 'html'

                                        })
                           .success(function (result) {

                               $('#divPartial').show();
                               //  alert(result);
                               $('#divPartial').html(result);
                           })
                           .error(function (xhr, status) {
                               // alert("2");
                           });
                                    }, 4000);

                                }
                            },

                            error: function (event, jqxhr, settings, exception) {
                                var responseTitle = $(event.responseText).filter('title').get(0);
                                alert("error" + ($(responseTitle).text() + "\n" + formatErrorMessage(event, jqxhr)));
                            }

                        });
                    }

                    else {
                        return false;
                    }


                });


                function formatErrorMessage(jqXHR, exception) {
                    if (jqXHR.status === 0) {
                        return ('Not connected.\nPlease verify your network connection.');
                    } else if (jqXHR.status == 404) {
                        return ('The requested page not found. [404]');
                    } else if (jqXHR.status == 500) {
                        return ('Internal Server Error [500].');
                    } else if (exception === 'parsererror') {
                        return ('Requested JSON parse failed.');
                    } else if (exception === 'timeout') {
                        return ('Time out error.');
                    } else if (exception === 'abort') {
                        return ('Ajax request aborted.');
                    } else {
                        return ('Uncaught Error.\n' + jqXHR.responseText);
                    }
                }
            }
        });

        $(".update").click(function (e) {
            e.preventDefault();

            var redirecturl = $(this).attr('href');
            //        alert(redirecturl);
            $.ajax({
                url: redirecturl,
                contentType: 'application/html; charset=utf-8',
                type: 'GET',
                dataType: 'html'

            })
       .success(function (result) {
           $('#divPartial').show();
           //alert(result);
           $('#divPartial').html(result);
       })
       .error(function (xhr, status) {
           //alert("2");
       });
        });



        //Allow users to enter numbers only
        $(".numericOnly").bind('keypress', function (e) {

            if ((e.which < 48 || e.which > 57)) {
                if (e.which == 8 || e.which == 46 || e.which == 0) {
                    return true;
                }
                else {
                    return false;
                }
            }
        });


    });
</script>
